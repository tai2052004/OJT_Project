document.getElementById('search-button').addEventListener('click', performSearch);

const API_KEY = '0h5JCQWWS58FnIIbcRRDOohn75o-xl-0rbdtEEAFCkU'; // Thay b·∫±ng key c·ªßa b·∫°n
const searchInput = document.getElementById('query');
const imageResults = document.getElementById('image-results');

async function performSearch() {
    const query = searchInput.value.trim();
    if (!query) return;

    const loadingElement = document.getElementById('loading');
    const resultsElement = document.getElementById('results');

    loadingElement.style.display = 'block';
    resultsElement.innerHTML = '<div class="translation-status">ƒêang x·ª≠ l√Ω...</div>';
    imageResults.innerHTML = ''; // X√≥a ·∫£nh c≈©

    try {
        // B∆∞·ªõc 1: D·ªãch sang ti·∫øng Nh·∫≠t
        const translatedQuery = await translateToJapanese(query);
        resultsElement.innerHTML = `<div class="translation-status">ƒê√£ d·ªãch: "${query}" ‚Üí "${translatedQuery}"</div>`;

        // B∆∞·ªõc 2: T√¨m ki·∫øm tr√™n Jisho
        const searchResults = await searchJisho(translatedQuery);
        displayResults(searchResults);

        // B∆∞·ªõc 3: T√¨m ki·∫øm ·∫£nh t·ª´ Unsplash
        await fetchImages(translatedQuery);

    } catch (error) {
        console.error('L·ªói:', error);
        resultsElement.innerHTML = '<div class="error">C√≥ l·ªói x·∫£y ra: ' + error.message + '</div>';
    } finally {
        loadingElement.style.display = 'none';
    }
}

// H√†m d·ªãch sang ti·∫øng Nh·∫≠t
async function translateToJapanese(text) {
    try {
        const response = await fetch(`https://translate.googleapis.com/translate_a/single?client=gtx&sl=auto&tl=ja&dt=t&q=${encodeURIComponent(text)}`);
        const data = await response.json();
        return data[0].map(item => item[0]).join('');
    } catch (error) {
        console.error('L·ªói d·ªãch:', error);
        throw new Error('Kh√¥ng th·ªÉ d·ªãch t·ª´ kh√≥a');
    }
}

// H√†m t√¨m ki·∫øm tr√™n Jisho
async function searchJisho(query) {
    const proxyUrl = 'https://api.allorigins.win/get?url=';
    const jishoUrl = encodeURIComponent(`https://jisho.org/api/v1/search/words?keyword=${query}`);

    const response = await fetch(proxyUrl + jishoUrl);
    const data = await response.json();

    if (!response.ok) throw new Error(data.message || 'L·ªói API');
    if (!data.contents) throw new Error('Kh√¥ng c√≥ d·ªØ li·ªáu tr·∫£ v·ªÅ');

    return JSON.parse(data.contents).data;
}

// Hi·ªÉn th·ªã k·∫øt qu·∫£
function displayResults(results) {
    const container = document.getElementById('results');
    container.style.display = 'block';
    container.innerHTML = "";
    if (!results || results.length === 0) {
        container.innerHTML += '<p>Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£</p>';
        return;
    }
    let html = `
        <div class="result-container p-3">
            <h3 class="text-primary">üîç K·∫øt qu·∫£ t√¨m ki·∫øm</h3>
            <div class="row g-3">
    `;

    results.forEach(result => {
        const japanese = result.japanese?.[0] || {};
        const senses = result.senses?.[0] || {};

        const word = japanese.word || japanese.reading || 'N/A';
        const reading = japanese.reading || '';
        const meaning = senses.english_definitions?.join(', ') || 'Kh√¥ng c√≥ th√¥ng tin';

        html += `
            <div class="result-item pb-2">
    <div class="d-flex align-items-center">
        <h2 class="me-5">${word}</h2> 
        <p class="meaning mb-0"><strong>√ù nghƒ©a:</strong> ${meaning}</p>
    </div>
    ${reading ? `<p class="reading text-muted"><em>${reading}</em></p>` : ''}
    <div class="border-bottom mt-2 w-50"></div> 
</div>


        `;
    });
    html += `</div></div>`;
    container.innerHTML += html;
}
async function fetchImages(query) {
    try {
        const response = await fetch(
            `https://api.unsplash.com/search/photos?query=${query}&client_id=${API_KEY}&per_page=1`
        );
        const data = await response.json();
        if (data.results && data.results.length > 0) {
            displayImages(data.results[0]); // Truy·ªÅn 1 ·∫£nh duy nh·∫•t
        } else {
            imageResults.innerHTML = '<p>Kh√¥ng t√¨m th·∫•y ·∫£nh ph√π h·ª£p</p>';
        }
    } catch (error) {
        console.error('L·ªói khi t·∫£i ·∫£nh:', error);
        imageResults.innerHTML = '<p>Kh√¥ng th·ªÉ t·∫£i ·∫£nh</p>';
    }
}

function displayImages(image) {
    imageResults.innerHTML = ''; // X√≥a n·ªôi dung c≈©

    const imgElement = document.createElement('img');
    imgElement.src = image.urls.regular; // URL ·∫£nh ch·∫•t l∆∞·ª£ng trung b√¨nh
    imgElement.alt = image.alt_description || '·∫¢nh minh h·ªça';

    // Th√™m style ƒë·ªÉ ·∫£nh ƒë·∫πp h∆°n (t√πy ch·ªçn)
    imgElement.style.maxWidth = '100%';
    imgElement.style.borderRadius = '8px';
    imgElement.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';

    imageResults.appendChild(imgElement);
}